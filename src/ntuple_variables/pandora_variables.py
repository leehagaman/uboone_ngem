
blip_vars = [
    "nblips_saved",
    "blip_x",
    "blip_y",
    "blip_z",
    "blip_dx",
    "blip_dw",
    "blip_energy",
    "blip_true_g4id",
    "blip_true_pdg",
    "blip_true_energy",
]

# more technical blip variables
extra_blip_vars = [
    "blip_charge",
    "blip_nplanes",
    "blip_proxtrkdist",
    "blip_proxtrkid",
    "blip_touchtrk",
    "blip_touchtrkid",
    "blip_pl0_nwires",
    "blip_pl1_nwires",
    "blip_pl2_nwires",
    "blip_pl0_bydeadwire",
    "blip_pl1_bydeadwire",
    "blip_pl2_bydeadwire",
]

blip_postprocessing_vars = [
    "blip_closest_upstream_distance",
    "blip_closest_upstream_angle",
    "blip_closest_upstream_impact_parameter",
    "blip_closest_upstream_energy",
    "blip_closest_upstream_dx",
    "blip_closest_upstream_dw",
]

pandora_non_BDT_vars = [
    "crtveto",
    "crthitpe",
    "reco_nu_vtx_x",
    "reco_nu_vtx_y",
    "reco_nu_vtx_z",
    "reco_nu_vtx_sce_x",
    "reco_nu_vtx_sce_y",
    "reco_nu_vtx_sce_z",
]

pandora_scalar_vars = [
    # general variables
    "reco_e",
    "nslice",
    "slice_orig_pass_id",
    "slice_orig_topo_score",
    "topological_score",
    "slpdg",
    "NeutrinoEnergy0",
    "NeutrinoEnergy1",
    "NeutrinoEnergy2",
    "SliceCaloEnergy0",
    "SliceCaloEnergy1",
    "SliceCaloEnergy2",

    # multiplicities
    "nslice",
    "n_showers",
    "n_showers_contained",
    "n_tracks",
    "n_tracks_contained",
    # "n_tracks_tot", # doesn't exist in file!

    # Track and shower kinematic variables from Table 3 here: https://www.overleaf.com/project/684883223ef7804ef5a5dc32
    "shr_hits_max",
    "shr_hits_2nd",
    "shr_hits_3rd",
    "trk_hits_max",
    "trk_hits_2nd",
    "trk_hits_3rd",
    "shr_hits_tot",
    "trk_hits_tot",
    "trk_hits_y_tot",
    "trk_hits_v_tot",
    "trk_hits_u_tot",
    "shr_hits_y_tot",
    "shr_hits_v_tot",
    "shr_hits_u_tot",
    "shr_energy",
    "shr_energy_tot",
    "shr_energy_second",
    "shr_energy_third",
    "shr_energy_tot_cali",
    "shr_energy_cali",
    "shr_energy_second_cali",
    "shr_energy_third_cali",
    "shr_dedx_Y",
    "shr_dedx_V",
    "shr_dedx_U",
    "shr_dedx_Y_cali",
    "shr_dedx_V_cali",
    "shr_dedx_U_cali",
    "shr_distance",
    "tksh_distance",
    "tksh_angle",
    # "tksh_angle_muon", # doesn't exist in file!
    "shr_score",
    "shr_theta",
    "shr_phi",
    "shr_px",
    "shr_py",
    "shr_pz",
    "shr_pca_0",
    "shr_pca_1",
    "shr_pca_2",
    "shr_openangle",
    # "shr_pidchpr", # doesn't exist in file!
    # "shr_pidchimu", # doesn't exist in file!
    "shr_llrpid_dedx",
    "shr_llrpid_dedx_U",
    "shr_llrpid_dedx_V",
    "shr_llrpid_dedx_Y",
    "shr_bragg_p",
    "shr_bragg_mu",
    "shr_bragg_mip",
    "shr_bragg_pion",
    "shr_bragg_kaon",
    "trk_len",
    "trk_energy",
    "trk_energy_muon",
    "trk_energy_muon_mcs",
    "trk_energy_tot",
    "trk_energy_muon_tot",
    "trk_distance",
    "trk_theta",
    "trk_phi",

    # Extra variables from Section 6 of https://microboone-docdb.fnal.gov/cgi-bin/sso/ShowDocument?docid=32933, and related variables
    "trkpid",
    "trkshrhitdist0",
    "trkshrhitdist1",
    "trkshrhitdist2",
    "trkfit",
    "subcluster",
    "shrmoliereavg",
    "shrmoliererms",
    "shr1shr2moliereavg",
    "shr1shr2moliererms",
    "shr1trk1moliereavg",
    "shr1trk1moliererms",
    "shr1trk2moliereavg",
    "shr1trk2moliererms",
    # "shr_trk_len" # doesn't exist in file!
    "CylFrac1h_1cm",
    "CylFrac1h_2cm",
    "CylFrac1h_3cm",
    "CylFrac1h_4cm",
    "CylFrac1h_5cm",
    "CylFrac2h_1cm",
    "CylFrac2h_2cm",
    "CylFrac2h_3cm",
    "CylFrac2h_4cm",
    "CylFrac2h_5cm",
    "CylFrac_1cm",
    "CylFrac_2cm",
    "CylFrac_3cm",
    "CylFrac_4cm",
    "CylFrac_5cm",
    "shrPCA1CMed_2_5cm",
    "shrPCA1CMed_5cm",
    "DeltaMed",
    "DeltaMed1h",
    "DeltaMed2h",
    "DeltaRMS",
    "DeltaRMS1h",
    "DeltaRMS2h",
    "shrMCSMom",
    "shrMCSMom1h",
    "shrMCSMom2h",
    "shr_tkfit_2cm_dedx_U",
    "shr_tkfit_2cm_dedx_V",
    "shr_tkfit_2cm_dedx_Y",
    "shr_tkfit_2cm_nhits_U",
    "shr_tkfit_2cm_nhits_V",
    "shr_tkfit_2cm_nhits_Y",
    "shr_tkfit_dedx_U",
    "shr_tkfit_dedx_U_alt",
    "shr_tkfit_dedx_V",
    "shr_tkfit_dedx_V_alt",
    "shr_tkfit_dedx_Y",
    "shr_tkfit_dedx_Y_alt",
    "shr_tkfit_dedx_max",
    "shr_tkfit_gap05_dedx_U",
    "shr_tkfit_gap05_dedx_V",
    "shr_tkfit_gap05_dedx_Y",
    "shr_tkfit_gap05_nhits_U",
    "shr_tkfit_gap05_nhits_V",
    "shr_tkfit_gap05_nhits_Y",
    "shr_tkfit_gap10_dedx_U",
    "shr_tkfit_gap10_dedx_V",
    "shr_tkfit_gap10_dedx_Y",
    "shr_tkfit_gap10_nhits_U",
    "shr_tkfit_gap10_nhits_V",
    "shr_tkfit_gap10_nhits_Y",
    "shr_tkfit_nhits_U",
    "shr_tkfit_nhits_U_alt",
    "shr_tkfit_nhits_V",
    "shr_tkfit_nhits_V_alt",
    "shr_tkfit_nhits_Y",
    "shr_tkfit_nhits_Y_alt",
    "shr_tkfit_npoints",
    "shr_tkfit_npointsvalid",
    "shr_tkfit_phi",
    "shr_tkfit_theta",
    "shr_trkfitmedangle",

    # From Table 6 of https://microboone-docdb.fnal.gov/cgi-bin/sso/ShowDocument?docid=32933, and related variables
    "contained_fraction",
    "sps_contained_fraction",
    "contained_sps_ratio",
    "hits_ratio",
    "CosmicIP",
    "CosmicIPAll2DEnds",
    "CosmicIPAll2DOvlp",
    "CosmicIPAll3D",
    "CosmicDirAll2DEnds",
    "CosmicDirAll2DOvlp",
    "CosmicDirAll3D",
    "_closestNuCosmicDist",
    "slclustfrac",
    # "nObjHits {U,V,Y}", # doesn't exist in file!
    "tksh_angle",
    # "tk1sh1_angle_alltk", # doesn't exist in file!
    "secondshower_U_03_ncluster",
    "secondshower_U_10_ncluster",
    "secondshower_U_20_ncluster",
    "secondshower_U_charge",
    "secondshower_U_dir",
    "secondshower_U_dot",
    "secondshower_U_eigenratio",
    "secondshower_U_nhit",
    "secondshower_U_vtxdist",
    "secondshower_V_03_ncluster",
    "secondshower_V_10_ncluster",
    "secondshower_V_20_ncluster",
    "secondshower_V_charge",
    "secondshower_V_dir",
    "secondshower_V_dot",
    "secondshower_V_eigenratio",
    "secondshower_V_nhit",
    "secondshower_V_vtxdist",
    "secondshower_Y_03_ncluster",
    "secondshower_Y_10_ncluster",
    "secondshower_Y_20_ncluster",
    "secondshower_Y_charge",
    "secondshower_Y_dir",
    "secondshower_Y_dot",
    "secondshower_Y_eigenratio",
    "secondshower_Y_nhit",
    "secondshower_Y_vtxdist",

    "nhits_r1cm",
    "nhits_r3cm",
    "nhits_r5cm",
    "nhits_r10cm",
    "ng2hip_r1cm",
    "ng2hip_r3cm",
    "ng2hip_r5cm",
    "ng2hip_r10cm",
    "ng2clu_hip_r1cm",
    "ng2clu_hip_r3cm",
    "ng2clu_hip_r5cm",
    "ng2clu_hip_r10cm",
    "ng2clu_hippfp_r1cm",
    "ng2clu_hippfp_r3cm",
    "ng2clu_hippfp_r5cm",
    "ng2clu_hippfp_r10cm",

    # NuGraph variables
    "slcng2shr",
    "slcng2mip",
    "slcng2hip",
    "slcng2mcl",
    "slcng2dfs",
    "slcng2bkg",
    "clung2shr",
    "clung2mip",
    "clung2hip",
    "clung2mcl",
    "clung2dfs",
    "clung2bkg",
]

pandora_vector_vars = [

    # vector variables for postprocessing
    "pfp_generation_v",
    "pfng2hip_r1cm",
    "pfng2hip_r3cm",
    "pfng2hip_r5cm",
    "pfng2hip_r10cm",
    "pfng2semlabel",
    "pfng2shrfrac",
    "pfng2mipfrac",
    "pfng2hipfrac",
    "pfng2mclfrac",
    "pfng2dfsfrac",
    "pfng2bkgfrac",
    "pfng2shravrg",
    "pfng2mipavrg",
    "pfng2hipavrg",
    "pfng2mclavrg",
    "pfng2dfsavrg",
    "pfng2bkgavrg",
    "trk_pfp_id_v",
    "trk_phi_v",
    "trk_pid_chika_u_v",
    "trk_pid_chika_v",
    "trk_pid_chika_v_v",
    "trk_pid_chimu_u_v",
    "trk_pid_chimu_v",
    "trk_pid_chimu_v_v",
    "trk_pid_chipi_u_v",
    "trk_pid_chipi_v",
    "trk_pid_chipi_v_v",
    "trk_pid_chipr_u_v",
    "trk_pid_chipr_v",
    "trk_pid_chipr_v_v",
    "trk_pida_u_v",
    "trk_pida_v",
    "trk_pida_v_v",
    # "trkshrscore_v", # seems to be usually an empty list, and then occasionally [0], with no nonzero values
    "trk_llr_pid_score_v",
    "trk_len_v",
    "trk_distance_v",
    "trk_score_v",
    "trk_energy_muon_v",
    "trk_energy_proton_v",
    # "MCS quality", # doesn't exist in file!
]

pandora_vector_vars_with_prefix = [f"pandora_{var}" for var in pandora_vector_vars]

pandora_vars = pandora_non_BDT_vars + pandora_scalar_vars + pandora_vector_vars + blip_vars

pandora_postprocessing_vars = []

pandora_training_vars = [f"pandora_{var}" for var in pandora_scalar_vars] + pandora_postprocessing_vars

